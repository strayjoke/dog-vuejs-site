(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{334:function(e,t,s){"use strict";s.r(t);var a=s(33),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),s("p",[s("a",{attrs:{href:"www.strayjoke.com",target:"_blank"}},[e._v("dog-vuejs")]),e._v(" 是一个使用 "),s("a",{attrs:{href:"https://github.com/vuejs/vue",target:"_blank"}},[e._v("vuejs")]),e._v(" 和 "),s("a",{attrs:{href:"https://github.com/ElemeFE/element",target:"_blank"}},[e._v("element-ui")]),e._v(" 开发的后台前端项目。集成了用户认证，动态路由，权限验证等基础功能，可以作为企业级的中后台项目模板。")]),e._v(" "),s("p",[e._v("在线预览："),s("a",{attrs:{href:"https://strayjoke.github.io/dog-vuejs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://strayjoke.github.io/dog-vuejs/"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("项目源码："),s("a",{attrs:{href:"https://github.com/strayjoke/dog-vuejs",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/strayjoke/dog-vuejs"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("服务端源码: "),s("a",{attrs:{href:"git@github.com:strayjoke/dog-nodejs.git"}},[e._v("git@github.com:strayjoke/dog-nodejs.git")])]),e._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 克隆项目\ngit clone git@github.com:strayjoke/dog-vuejs.git\n\n# 进入项目\ncd dog-vuejs\n\n# 安装依赖\nnpm install\n\n# 本地开发 启动项目\nnpm run serve\n\n# 部署\nnpm run build\n\n")])])]),s("h2",{attrs:{id:"目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[e._v("#")]),e._v(" 目录结构")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("├─docs                                # vuepress 根目录\n├─public                              # 静态资源\n└─src                                 # 源代码\n    ├─api                             # api接口\n    ├─assets                          # 样式、图片等静态资源\n    ├─components                      # 组件\n    ├─directives                      # 自定义指令\n    ├─filters                         # 自定义过滤器\n    ├─icons                           # 图标\n    ├─layout                          # 项目布局\n    ├─mixins                          # 混入\n    ├─plugins                         # 自定义插件\n    ├─router                          # 路由\n    ├─store                           # store 状态\n    ├─utils                           # 工具\n    └─views                           # 页面\n\n")])])]),s("h2",{attrs:{id:"页面布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面布局"}},[e._v("#")]),e._v(" 页面布局")]),e._v(" "),s("p",[e._v("分为左右布局：左侧为"),s("code",[e._v("菜单栏")]),e._v("， 右侧再分为上下布局，上部为"),s("code",[e._v("顶部栏")]),e._v("，下部为"),s("code",[e._v("标签栏")]),e._v("和"),s("code",[e._v("内容区域")]),e._v("。\n路由页面主要通过 "),s("code",[e._v("router-view")]),e._v(" 标签渲染在"),s("code",[e._v("内容区域")]),e._v("。")]),e._v(" "),s("p",[s("img",{attrs:{src:"/dog-vuejs-site//images/layout.jpg",alt:"页面布局"}})]),e._v(" "),s("p",[e._v("在 "),s("code",[e._v("src/layout/TheLayout.vue")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(' <el-container class="layout">\n        <the-aside />                                  #左侧栏\n        <el-container direction="vertical" class="content">\n            <the-header />                             #顶部栏\n            <the-main />                               #包含标签栏和内容区域\n            <the-footer />                             #支持添加footer\n        </el-container>\n</el-container>\n')])])]),s("h2",{attrs:{id:"用户认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户认证"}},[e._v("#")]),e._v(" 用户认证")]),e._v(" "),s("p",[e._v("用户认证建议采用"),s("code",[e._v("localStorage")]),e._v(" + "),s("code",[e._v("jwt")]),e._v(" + "),s("code",[e._v("session")]),e._v(" 方式。")]),e._v(" "),s("ul",[s("li",[e._v("采用"),s("code",[e._v("locacailStorage")]),e._v("，是基于目前移动端不支持"),s("code",[e._v("cookie")]),e._v(",为了保持PC端和移动端一致。")]),e._v(" "),s("li",[e._v("采用"),s("code",[e._v("jwt")]),e._v("，是因为自包含的特性，可以在服务端解析出登录用户信息，不需要查询一次数据库。")])]),e._v(" "),s("h4",{attrs:{id:"为什么采用session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么采用session"}},[e._v("#")]),e._v(" 为什么采用session")]),e._v(" "),s("p",[e._v("目前用户认证有三种方案："),s("code",[e._v("session")]),e._v(" 、 "),s("code",[e._v("jwt")]),e._v("、"),s("code",[e._v("OAuth2")])]),e._v(" "),s("ul",[s("li",[e._v("采用无状态的"),s("code",[e._v("jwt")]),e._v("， 优点在于服务端无需记录，缺点在于无法"),s("code",[e._v("续期")]),e._v("。那些通过重新刷新token，记录白名单等，虽然可以解决问题，却也增加了复杂度，属于"),s("code",[e._v("为了用而用")]),e._v("，偏离了"),s("code",[e._v("jwt")]),e._v("的初衷。")]),e._v(" "),s("li",[e._v("采用"),s("code",[e._v("OAuth2")]),e._v("，"),s("code",[e._v("OAuth2")]),e._v("共有四种方式，每种方式都需要预先在服务端登记客户端的信息，以识别客户端。主要用于第三方调用，场景不符且稍显笨重。")])]),e._v(" "),s("p",[s("strong",[e._v("建议采用 redis 作为 "),s("code",[e._v("session")]),e._v(" 服务器。")])]),e._v(" "),s("h2",{attrs:{id:"权限控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#权限控制"}},[e._v("#")]),e._v(" 权限控制")]),e._v(" "),s("p",[e._v("权限分为四种：左侧栏菜单权限，页面路由权限，按钮权限，api接口权限。")]),e._v(" "),s("ul",[s("li",[e._v("左侧栏权限用于控制左侧栏的菜单选项是否可见")]),e._v(" "),s("li",[e._v("页面路由权限决定了跳转的页面是否可见")]),e._v(" "),s("li",[e._v("按钮权限用于控制一些 "),s("code",[e._v("新增")]),e._v("、 "),s("code",[e._v("编辑")]),e._v("、 "),s("code",[e._v("删除")]),e._v("、 "),s("code",[e._v("搜索")]),e._v("等增删改查按钮是否显示，按钮权限需要定义一个唯一标识")]),e._v(" "),s("li",[e._v("api 接口权限用于控制 restful api 接口是否可以通过，主要通过 "),s("code",[e._v("url")]),e._v(" 和 http 方法两个维度进行区分。")])]),e._v(" "),s("p",[e._v("系统采用基于角色的访问控制模式")]),e._v(" "),s("blockquote",[s("p",[e._v("用户通过角色与权限进行关联。构成“用户-角色-权限”的授权模型。用户与角色，角色与权限之间，都是多对多的关系。")])]),e._v(" "),s("h2",{attrs:{id:"和服务端交互"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和服务端交互"}},[e._v("#")]),e._v(" 和服务端交互")]),e._v(" "),s("p",[e._v("系统使用 "),s("code",[e._v("axios")]),e._v(" 库向服务端请求数据。通过定义http 头部 "),s("code",[e._v("Authorization")]),e._v(", 拼接"),s("code",[e._v("Bearer")]),e._v("+ 空格 + "),s("code",[e._v("token")]),e._v("传递用户登录凭证。")]),e._v(" "),s("h4",{attrs:{id:"统一封装-axios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统一封装-axios"}},[e._v("#")]),e._v(" 统一封装 axios")]),e._v(" "),s("p",[e._v("在 "),s("code",[e._v("src/utils/request.js")]),e._v("中封装，统一处理 "),s("code",[e._v("网络超时")]),e._v("、"),s("code",[e._v("401")]),e._v("、"),s("code",[e._v("403")]),e._v("错误。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// create an axios instance\nconst service = axios.create({\n    baseURL: process.env.VUE_APP_BASE_API,\n    timeout: process.env.VUE_APP_TIMEOUT // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n    config => {\n        config.headers.common['Authorization'] = `Bearer ` + store.state.token\n        return config\n    },\n    error => {\n        // Do something with request error\n        Promise.reject(error)\n    }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n    error => {\n        // 处理网络请求\n        if (error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1) {\n            Message({\n                message: '网络请求超时，请稍后重试',\n                type: 'error',\n                duartion: 3000\n            })\n        }\n        if (error && error.response) {\n            switch (error.response.status) {\n                case 401:\n                    MessageBox.confirm('会话过期，请重新登录', '确认', {\n                        confirmButtonText: '重新登录',\n                        showCancelButton: false,\n                        showClose: false,\n                        closeOnClickModal: false,\n                        closeOnPressEscape: false,\n                        type: 'warning'\n                    }\n                    ).then(() => {\n                        store.dispatch('logout').then(() => {\n                            router.push(`/login`)\n                        })\n                    })\n                    break\n                case 403:\n                    MessageBox.confirm(error.response.data.msg, '警告', {\n                        confirmButtonText: '确认',\n                        showCancelButton: false,\n                        showClose: false,\n                        closeOnClickModal: false,\n                        closeOnPressEscape: false,\n                        type: 'warning'\n                    }\n                    )\n                    break\n                default:\n                    Message({\n                        message: error.response.data.msg || '网络请求异常，请联系管理员！',\n                        type: 'error',\n                        duration: 3000\n                    })\n            }\n            return Promise.reject(error.response.data)\n        }\n    }\n)\n")])])]),s("p",[e._v("在"),s("code",[e._v("src/api/user.js")]),e._v("中使用")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import request from '@/utils/request.js'\n\nexport function getUserList(query) {\n    return request({\n        url: '/api/userList',\n        method: 'get',\n        params: query\n    })\n}\n")])])]),s("h2",{attrs:{id:"mockjs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mockjs"}},[e._v("#")]),e._v(" mockjs")]),e._v(" "),s("p",[s("code",[e._v("/src/main.js")]),e._v(" 中,添加"),s("code",[e._v("mockjs")]),e._v("逻辑")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import Mock from '@/mock'\n\nMock.mockData()\n")])])]),s("p",[s("code",[e._v("src/mock")]),e._v(" 中:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("└─mock                                 # mock\n    ├─auth                             # auth接口\n    ├─dict                             # dict 接口\n    ├─index                            # mock 入口\n    ├─menu                             # 菜单接口\n    ├─role                             # 角色接口\n    ├─user                             # 用户接口\n")])])]),s("p",[e._v("在 "),s("code",[e._v("src/mock/index.js")]),e._v("中:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import Auth from './auth.js'\nimport Menu from './menu.js'\nimport User from './user.js'\nimport Role from './role.js'\nimport Dict from './dict.js'\n\nexport default {\n    mockData() {\n        Auth.mockData()\n        Menu.mockData()\n        User.mockData()\n        Role.mockData()\n        Dict.mockData()\n    }\n}\n")])])]),s("h2",{attrs:{id:"对接服务端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对接服务端"}},[e._v("#")]),e._v(" 对接服务端")]),e._v(" "),s("p",[e._v("服务端项目为 "),s("strong",[e._v("nodejs")]),e._v(" 项目, 源码地址: "),s("a",{attrs:{href:"git@github.com:strayjoke/dog-nodejs.git"}},[e._v("git@github.com:strayjoke/dog-nodejs.git")]),e._v("\n另外还需要做如下配置:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("/src/main.js")]),e._v(" 中,注释掉"),s("code",[e._v("mockjs")]),e._v("逻辑")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import Mock from '@/mock'\n\nMock.mockData()\n")])])]),s("ul",[s("li",[e._v("在"),s("code",[e._v("/.env.development")]),e._v(" 和 "),s("code",[e._v("/.env.production")]),e._v("中,替换为服务端地址,如:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("VUE_APP_BASE_API='localhost:3000' \n")])])]),s("h2",{attrs:{id:"部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[e._v("#")]),e._v(" 部署")]),e._v(" "),s("ul",[s("li",[e._v("在 "),s("code",[e._v("main.js")]),e._v("中:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Vue.config.silent = true // 取消 Vue 所有的日志与警告\n\nVue.config.productionTip = false //阻止 vue 在启动时生成生产提示\n")])])]),s("ul",[s("li",[e._v("在 "),s("code",[e._v("vue.config.js")]),e._v("中:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("module.exports = {\n    productionSourceMap: false, //禁止查看源码\n}\n")])])]),s("h2",{attrs:{id:"环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[e._v("#")]),e._v(" 环境变量")]),e._v(" "),s("ul",[s("li",[e._v("环境变量的引入需要结合vue-cli 中对模式的定义。模式共有："),s("code",[e._v("development")]),e._v("、"),s("code",[e._v("production")]),e._v("、"),s("code",[e._v("test")]),e._v("。")]),e._v(" "),s("li",[e._v("环境变量文件名需要对应模式，如："),s("code",[e._v(".env.development")]),e._v("、"),s("code",[e._v(".env.production")]),e._v("、"),s("code",[e._v(".env.test")]),e._v("。不同的模式下，会引入不同的环境配置文件。")]),e._v(" "),s("li",[e._v("环境变量需要以 "),s("code",[e._v("VUE_APP_")]),e._v(" 开头")])]),e._v(" "),s("p",[e._v("在 "),s("code",[e._v(".env.development")]),e._v(" 中定义环境变量：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("VUE_APP_BASE_API='/api'\nVUE_APP_BASE_URL='/'  \nVUE_APP_TIMEOUT=5000\n")])])]),s("p",[e._v("在 "),s("code",[e._v(".env.production")]),e._v(" 中定义环境变量：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("VUE_APP_BASE_API='http://localhost:3000'  # 对接nodejs服务端\nVUE_APP_BASE_URL='/'  \nVUE_APP_TIMEOUT=5000\n")])])]),s("p",[e._v("在 "),s("code",[e._v("src/utils/request.js")]),e._v("中使用环境变量")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const service = axios.create({\n    baseURL: process.env.VUE_APP_BASE_API,\n    timeout: process.env.VUE_APP_TIMEOUT // request timeout\n})\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);